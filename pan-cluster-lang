#!/usr/bin/python
# -*- coding: utf-8 -*-
import subprocess
import time
import os
import sys
HERE = os.path.dirname(__file__)
sys.path.append(HERE)
import argparse
import charmodel
import random
import json
import numpy as np
import errno
import arguments
import language

from meta import write_results, makepath, save_opinions, load_opinions


def main():
    parser = argparse.ArgumentParser()
    rnn_args = parser.add_argument_group('RNN arguments')

    learn_corpus_args = []

    def add_arg(*args, **kwargs):
        arg = parser.add_argument(*args, **kwargs)
        learn_corpus_args.append(arg)

    def rnn_arg(*args, **kwargs):
        arg = rnn_args.add_argument(*args, **kwargs)
        learn_corpus_args.append(arg)

    arguments.add_common_args(add_arg)
    arguments.add_rnn_args(rnn_arg)
    args = parser.parse_args()

    if args.rng_seed != -1:
        random.seed(args.rng_seed)

    if args.output_dir is None:
        dir = arguments.make_directory_name(args.basename, args.lang)
        args.output_dir = dir

    if args.save is None:
        args.save = os.path.join(args.output_dir,
                                 '%s-affinities.pickle' % args.lang)

    try:
        os.makedirs(args.output_dir)
        print "made output directory %r" % args.output_dir
    except OSError, e:
        if e.errno == errno.EEXIST:
            print "output directory %r already exists" % args.output_dir
        else:
            raise

    cmd = ['./learn-corpus', args.lang]
    vargs = vars(args)
    for opt in learn_corpus_args:
        k = opt.dest
        if k not in vargs:
            continue
        v = vargs[k]
        if v == opt.default:
            continue
        if opt.option_strings == []:
            continue
        cmd.append(opt.option_strings[0])
        if opt.nargs != 0:
            cmd.append(str(v))

    print ' '.join(cmd)
    #sys.exit()

    subprocess.check_call(cmd)

    cmd = ['./emit-opinions', args.lang,
           '-o', args.output_dir,
           '-r', args.rng_seed
    ]
    if args.verbose:
        cmd.append('-v')

    subprocess.check_call(cmd)

main()
