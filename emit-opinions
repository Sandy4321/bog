#!/usr/bin/python
# -*- coding: utf-8 -*-
import os
import sys
HERE = os.path.dirname(__file__)
sys.path.append(HERE)
import argparse
import random
import numpy as np
import arguments

from interpret import apply_interpret_options, add_interpret_options

from meta import write_rankings_json, write_clusters_json, load_opinions

from munge import clipped_neg_exp, clipped_logistic
from munge import (write_normalised_png,
                   p_to_affinities, data_to_clusters)


def find_clusters(data, clusteriness=0):
    diagonal = np.diagonal(data)
    d_worst = np.min(diagonal)
    median = np.median(data)
    threshold = d_worst - clusteriness * (d_worst - median)
    return data_to_clusters(data, threshold)


def write_opinions(output_dir, affinities, all_names, clusteriness):
    for pid, data in affinities.items():
        names = all_names[pid]
        clusters = find_clusters(data, clusteriness)
        dest_dir = os.path.join(output_dir, pid)
        write_clusters_json(clusters, names, dest_dir)
        write_rankings_json(data, names, dest_dir)


def main():
    parser = argparse.ArgumentParser()
    add_interpret_options(parser)
    parser.add_argument('-o', '--output-dir', help="write results here")
    parser.add_argument('--clusteriness', help="how much to cluster",
                        default=0.0, type=float)
    args = parser.parse_args()

    affinities, all_names = apply_interpret_options(args)

    write_opinions(args.output_dir, affinities, all_names, args.clusteriness)


main()
